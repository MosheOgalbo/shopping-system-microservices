version: '3.8'

services:
  sql:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: shopping-app-sql-1
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "YourStrongPassword123!"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrongPassword123! -Q \"SELECT 1\""]
      start_period: 30s
      interval: 15s
      retries: 10
    volumes:
      - sql-data:/var/opt/mssql
    networks:
      - app-network

  mongo:
    image: mongo:6
    container_name: shopping-app-mongo-1
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  server-net:
    build:
      context: ./server-net
      dockerfile: Dockerfile
    depends_on:
      sql:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Server=sql,1433;Database=ShoppingAppDb;User Id=sa;Password=YourStrongPassword123!;TrustServerCertificate=true;MultipleActiveResultSets=true;Encrypt=False;
      - ASPNETCORE_ENVIRONMENT=Development

    ports:
      - "5177:8080"
    networks:
      - app-network

  server-node:
    build:
      context: ./server-node
      dockerfile: Dockerfile
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://root:example@shopping-app-mongo-1:27017/test?authSource=admin
    ports:
      - "3000:3000"
    networks:
      - app-network
app:
    build: .
    ports:
      - "8900:8900"
    environment:
      - NODE_ENV=production

volumes:
  sql-data:
  mongo-data:

networks:
  app-network:
    driver: bridge
