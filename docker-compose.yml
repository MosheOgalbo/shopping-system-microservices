version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: shopping-app-postgres-1
    environment:
      POSTGRES_DB: ShoppingAppDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: YourStrongPassword123!
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  mongo:
    image: mongo:6
    container_name: shopping-app-mongo-1
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  server-net:
    build:
      context: ./server-net
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # PostgreSQL connection string
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=ShoppingAppDb;Username=postgres;Password=YourStrongPassword123!
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "5177:8080"
    networks:
      - app-network
    restart: unless-stopped

  server-node:
    build:
      context: ./server-node
      dockerfile: Dockerfile
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://root:example@mongo:27017/test?authSource=admin
      - PORT=5000
    ports:
      - "5001:5000"
    networks:
      - app-network
    restart: unless-stopped

  app:
    build:
      context: ./shopping-client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data:
  mongo-data:

networks:
  app-network:
    driver: bridge
