// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingApp.Infrastructure.Data;

#nullable disable

namespace ShoppingApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250626114017_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShoppingApp.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 26, 11, 40, 17, 83, DateTimeKind.Utc).AddTicks(6060),
                            Description = "מוצרי אלקטרוניקה ומחשבים",
                            Name = "אלקטרוניקה"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 26, 11, 40, 17, 83, DateTimeKind.Utc).AddTicks(6060),
                            Description = "בגדים ואקססוריז",
                            Name = "ביגוד"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 26, 11, 40, 17, 83, DateTimeKind.Utc).AddTicks(6060),
                            Description = "ספרים ומגזינים",
                            Name = "ספרים"
                        });
                });

            modelBuilder.Entity("ShoppingApp.Core.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 26, 11, 40, 17, 83, DateTimeKind.Utc).AddTicks(6130),
                            Description = "מחשב נייד מתקדם",
                            Name = "לפטופ Dell",
                            Price = 2999.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 26, 11, 40, 17, 83, DateTimeKind.Utc).AddTicks(6130),
                            Description = "חולצת כותנה איכותית",
                            Name = "חולצה כחולה",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 26, 11, 40, 17, 83, DateTimeKind.Utc).AddTicks(6130),
                            Description = "ספר ללימוד תכנות",
                            Name = "ספר תכנות",
                            Price = 149.99m
                        });
                });

            modelBuilder.Entity("ShoppingApp.Core.Models.Product", b =>
                {
                    b.HasOne("ShoppingApp.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShoppingApp.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
